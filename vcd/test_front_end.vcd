$date
  Thu Aug  4 13:43:59 2022
$end
$version
  PyMTL 3 (Mamba)
$end
$timescale
 10ps
$end

$scope module top $end
  $var reg 248 . dual_uop $end
  $var reg 1 " clk $end
  $var reg 1 ! reset $end
  $scope module decoder $end
    $var reg 1 " clk $end
    $var reg 32 $ inst2 $end
    $var reg 248 . dual_uop $end
    $var reg 72 # fetch_packet $end
    $var reg 32 - inst1 $end
    $var reg 1 ! reset $end
    $scope module register_rename $end
      $var reg 64 , busy_table $end
      $var reg 15 / inst1_lregs $end
      $var reg 24 0 inst2_pregs $end
      $var reg 24 1 inst1_pregs $end
      $var reg 2 ) inst2_pregs_busy $end
      $var reg 1 " clk $end
      $var reg 2 & inst1_pregs_busy $end
      $var reg 1 ! reset $end
      $var reg 64 + free_list $end
      $var reg 15 2 inst2_lregs $end
    $upscope $end
    $scope module d1 $end
      $var reg 1 ! reset $end
      $var reg 32 - inst $end
      $var reg 2 & pregs_busy $end
      $var reg 8 % pc $end
      $var reg 24 3 pregs $end
      $var reg 124 ' uop $end
      $var reg 1 " clk $end
    $upscope $end
    $scope module d2 $end
      $var reg 1 " clk $end
      $var reg 24 4 pregs $end
      $var reg 32 $ inst $end
      $var reg 2 ) pregs_busy $end
      $var reg 8 % pc $end
      $var reg 124 ( uop $end
      $var reg 1 ! reset $end
    $upscope $end
  $upscope $end
  $scope module fetch_stage $end
    $var reg 1 ! reset $end
    $var reg 1 " clk $end
    $var reg 8 5 pc $end
    $var reg 64 6 icache_data $end
    $var reg 8 7 pc_next $end
    $var reg 72 * fetch_packet $end
    $scope module icache $end
      $var reg 64 8 data_out $end
      $var reg 1 " clk $end
      $var reg 1 ! reset $end
      $var reg 8 9 addr $end
      $scope module memory $end
        $var reg 1 " clk $end
        $var reg 1 ! reset $end
      $upscope $end
    $upscope $end
  $upscope $end
  $scope module pipeline_reg_fetch_decode $end
    $var reg 1 : en $end
    $var reg 72 * in_ $end
    $var reg 1 " clk $end
    $var reg 1 ! reset $end
    $var reg 72 # out $end
  $upscope $end
$upscope $end
$enddefinitions $end

b0b0 !
b0b0 "
b0b000000000000000000000000000000000000000000000000000000000000000000000000 #
b0b00000000000000000000000000000000 $
b0b00000000 %
b0b00 &
b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 '
b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (
b0b00 )
b0b000000000000000000000000000000000000000000000000000000000000000000000000 *
b0b0000000000000000000000000000000000000000000000000000000000000000 +
b0b0000000000000000000000000000000000000000000000000000000000000000 ,
b0b00000000000000000000000000000000 -
b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 .
b0b000000000000000 /
b0b000000000000000000000000 0
b0b000000000000000000000000 1
b0b000000000000000 2
b0b000000000000000000000000 3
b0b000000000000000000000000 4
b0b00000000 5
b0b0000000000000000000000000000000000000000000000000000000000000000 6
b0b00000000 7
b0b0000000000000000000000000000000000000000000000000000000000000000 8
b0b00000000 9
b0b0 :

#0
b0b1 "

b0b1 !
b0b000000000000000000000000000000000000000000000000000000000000000000000000 #
b0b00000000000000000000000000000000 $
b0b00000000 %
b0b00 &
b0b0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000010000 '
b0b0000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000010000 (
b0b00 )
b0b000000000000000000000000000000000000000000000000000000000000000000000000 *
b0b1111111111111111111111111111111111111111111111111111111111111110 +
b0b00000000000000000000000000000000 -
b0b00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000010000 .
b0b000000000000000 /
b0b000000000000000000000000 0
b0b000000000000000 2
b0b000000000000000000000000 3
b0b00000000 5
b0b0000000000000000000000000000000000000000000000000000000000000000 6
b0b00001000 7
b0b0000000000000000000000000000000000000000000000000000000000000000 8
b0b00000000 9
b0b0 :

#50
b0b0 "
#100
b0b1 "


#150
b0b0 "
#200
b0b1 "


#250
b0b0 "
#300
b0b1 "

b0b0 !
b0b000000100000000010100001000000110000000000100001000100011001001100000000 *
b0b0000001000000000101000010000001100000000001000010001000110010011 6
b0b0000001000000000101000010000001100000000001000010001000110010011 8
b0b1 :

#350
b0b0 "
#400
b0b1 "

b0b000000100000000010100001000000110000000000100001000100011001001100000000 #
b0b00000000001000010001000110010011 $
b0b0000000000100000000010100001000000110000000010001000001000000000010000000000000000000000000000000000000000000000100000100000 '
b0b0000000000000010000100010001100100110000010010001100010000000000100000010000000000001000000000000000000000000000000010010000 (
b0b10 )
b0b000000000001000100010010000100110000000000110010000000100011001100001000 *
b0b00000010000000001010000100000011 -
b0b00000000001000000000101000010000001100000000100010000010000000000100000000000000000000000000000000000000000000001000001000000000000000000010000100010001100100110000010010001100010000000000100000010000000000001000000000000000000000000000000010010000 .
b0b000100000100000 /
b0b000010000001000000000000 0
b0b000001000000000000000000 1
b0b000110001000000 2
b0b000001000000000000000000 3
b0b000010000001000000000000 4
b0b00001000 5
b0b0000000000010001000100100001001100000000001100100000001000110011 6
b0b00010000 7

#450
b0b0 "
#500
b0b1 "

b0b000000000001000100010010000100110000000000110010000000100011001100001000 #
b0b00000000001100100000001000110011 $
b0b00001000 %
b0b10 &
b0b0000000000000001000100010010000100110000100010010000010000000000110000010000000000001000000000000000000000000000000001010000 '
b0b0000000000000011001000000010001100110000110010010000100000110001000000110000100000111100000000000000000000000000000000010000 (
b0b11 )
b0b000001000100000010100000001000110000000000000000000000000000000000010000 *
b0b1111111111111111111111111111111111111111111111111111111111111000 +
b0b0000000000000000000000000000000000000000000000000000000000000110 ,
b0b00000000000100010001001000010011 -
b0b00000000000000010001000100100001001100001000100100000100000000001100000100000000000010000000000000000000000000000000010100000000000000000011001000000010001100110000110010010000100000110001000000110000100000111100000000000000000000000000000000010000 .
b0b001000001000000 /
b0b000100000011000010000011 0
b0b000011000001000000000000 1
b0b001000010000011 2
b0b000011000001000000000000 3
b0b000100000011000010000011 4
b0b00010000 5
b0b0000010001000000101000000010001100000000000000000000000000000000 6
b0b00011000 7

#550
b0b0 "
#600
b0b1 "

