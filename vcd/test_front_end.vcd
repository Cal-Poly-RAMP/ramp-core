$date
  Wed Aug 10 12:58:56 2022
$end
$version
  PyMTL 3 (Mamba)
$end
$timescale
 10ps
$end

$scope module top $end
  $var reg 1 ! clk $end
  $var reg 64 , busy_table $end
  $var reg 1 # reset $end
  $var reg 260 + dual_uop $end
  $scope module decoder $end
    $var reg 32 ( inst1 $end
    $var reg 1 # reset $end
    $var reg 260 + dual_uop $end
    $var reg 1 ! clk $end
    $var reg 32 ' inst2 $end
    $var reg 64 , busy_table $end
    $var reg 72 " fetch_packet $end
    $scope module d1 $end
      $var reg 2 $ pregs_busy $end
      $var reg 1 ! clk $end
      $var reg 8 - pc $end
      $var reg 130 & uop $end
      $var reg 1 # reset $end
      $var reg 24 . pregs $end
      $var reg 32 ( inst $end
    $upscope $end
    $scope module register_rename $end
      $var reg 24 / inst1_pregs $end
      $var reg 6 0 map_table(25) $end
      $var reg 6 1 map_table(4) $end
      $var reg 6 2 map_table(15) $end
      $var reg 2 $ inst1_pregs_busy $end
      $var reg 6 3 map_table(26) $end
      $var reg 6 4 map_table(5) $end
      $var reg 6 5 map_table(28) $end
      $var reg 15 6 inst2_lregs $end
      $var reg 6 7 map_table(16) $end
      $var reg 6 8 map_table(27) $end
      $var reg 6 9 map_table(6) $end
      $var reg 6 : map_table(29) $end
      $var reg 24 ; inst2_pregs $end
      $var reg 6 < map_table(17) $end
      $var reg 6 = map_table_wr1 $end
      $var reg 6 > map_table(7) $end
      $var reg 6 ? map_table(30) $end
      $var reg 2 ) inst2_pregs_busy $end
      $var reg 6 @ map_table_wr2 $end
      $var reg 6 A map_table(18) $end
      $var reg 6 B map_table(8) $end
      $var reg 6 C map_table(31) $end
      $var reg 64 D free_list $end
      $var reg 6 E map_table(19) $end
      $var reg 64 F free_list_next $end
      $var reg 6 G map_table(9) $end
      $var reg 64 , busy_table $end
      $var reg 6 H map_table(20) $end
      $var reg 6 I map_table(3) $end
      $var reg 6 J map_table(10) $end
      $var reg 64 K busy_table_next $end
      $var reg 6 L map_table(21) $end
      $var reg 6 M pdst1 $end
      $var reg 6 N map_table(0) $end
      $var reg 6 O map_table(11) $end
      $var reg 6 P map_table(22) $end
      $var reg 6 Q map_table(1) $end
      $var reg 6 R pdst2 $end
      $var reg 1 ! clk $end
      $var reg 6 S map_table(12) $end
      $var reg 1 # reset $end
      $var reg 6 T map_table(23) $end
      $var reg 6 U map_table(2) $end
      $var reg 6 V map_table(13) $end
      $var reg 15 W inst1_lregs $end
      $var reg 6 X map_table(24) $end
      $var reg 6 Y map_table(14) $end
    $upscope $end
    $scope module d2 $end
      $var reg 24 Z pregs $end
      $var reg 32 ' inst $end
      $var reg 2 ) pregs_busy $end
      $var reg 8 - pc $end
      $var reg 1 ! clk $end
      $var reg 130 * uop $end
      $var reg 1 # reset $end
    $upscope $end
  $upscope $end
  $scope module pipeline_reg_fetch_decode $end
    $var reg 72 % in_ $end
    $var reg 1 ! clk $end
    $var reg 72 " out $end
    $var reg 1 [ en $end
    $var reg 1 # reset $end
  $upscope $end
  $scope module fetch_stage $end
    $var reg 1 ! clk $end
    $var reg 1 # reset $end
    $var reg 64 \ icache_data $end
    $var reg 8 ] pc $end
    $var reg 8 ^ pc_next $end
    $var reg 72 % fetch_packet $end
    $scope module icache $end
      $var reg 1 ! clk $end
      $var reg 8 _ addr $end
      $var reg 64 ` data_out $end
      $var reg 1 # reset $end
      $scope module memory $end
        $var reg 1 ! clk $end
        $var reg 1 # reset $end
      $upscope $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end

b0b0 !
b0b000000000000000000000000000000000000000000000000000000000000000000000000 "
b0b0 #
b0b00 $
b0b000000000000000000000000000000000000000000000000000000000000000000000000 %
b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 &
b0b00000000000000000000000000000000 '
b0b00000000000000000000000000000000 (
b0b00 )
b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 *
b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 +
b0b0000000000000000000000000000000000000000000000000000000000000000 ,
b0b00000000 -
b0b000000000000000000000000 .
b0b000000000000000000000000 /
b0b000000 0
b0b000000 1
b0b000000 2
b0b000000 3
b0b000000 4
b0b000000 5
b0b000000000000000 6
b0b000000 7
b0b000000 8
b0b000000 9
b0b000000 :
b0b000000000000000000000000 ;
b0b000000 <
b0b000000 =
b0b000000 >
b0b000000 ?
b0b000000 @
b0b000000 A
b0b000000 B
b0b000000 C
b0b0000000000000000000000000000000000000000000000000000000000000000 D
b0b000000 E
b0b0000000000000000000000000000000000000000000000000000000000000000 F
b0b000000 G
b0b000000 H
b0b000000 I
b0b000000 J
b0b0000000000000000000000000000000000000000000000000000000000000000 K
b0b000000 L
b0b000000 M
b0b000000 N
b0b000000 O
b0b000000 P
b0b000000 Q
b0b000000 R
b0b000000 S
b0b000000 T
b0b000000 U
b0b000000 V
b0b000000000000000 W
b0b000000 X
b0b000000 Y
b0b000000000000000000000000 Z
b0b0 [
b0b0000000000000000000000000000000000000000000000000000000000000000 \
b0b00000000 ]
b0b00000000 ^
b0b00000000 _
b0b0000000000000000000000000000000000000000000000000000000000000000 `

#0
b0b1 !

b0b000000000000000000000000000000000000000000000000000000000000000000000000 "
b0b1 #
b0b00 $
b0b000000000000000000000000000000000000000000000000000000000000000000000000 %
b0b0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000100000000000 &
b0b00000000000000000000000000000000 '
b0b00 )
b0b0000000000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000100000000000 *
b0b00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000100000000000 +
b0b0000000000000000000000000000000000000000000000000000000000000000 ,
b0b00000000 -
b0b000000000000000000000000 .
b0b000000 0
b0b000000000000000 6
b0b000000 7
b0b000000000000000000000000 ;
b0b000000 <
b0b0000000000000000000000000000000000000000000000000000000000000000 D
b0b000000 E
b0b1111111111111111111111111111111111111111111111111111111111111110 F
b0b000000 G
b0b0000000000000000000000000000000000000000000000000000000000000000 K
b0b000000 L
b0b000000000000000 W
b0b000000 X
b0b000000000000000000000000 Z
b0b0 [
b0b0000000000000000000000000000000000000000000000000000000000000000 \
b0b00000000 ]
b0b00001000 ^
b0b0000000000000000000000000000000000000000000000000000000000000000 `

#50
b0b0 !
#100
b0b1 !

b0b1111111111111111111111111111111111111111111111111111111111111110 D
b0b000001 M
b0b000010 R

#150
b0b0 !
#200
b0b1 !


#250
b0b0 !
#300
b0b1 !

b0b0 #
b0b000000100000000010100001000000110000000000100001000100011001001100000000 %
b0b1 [
b0b0000001000000000101000010000001100000000001000010001000110010011 \
b0b0000001000000000101000010000001100000000001000010001000110010011 `

#350
b0b0 !
#400
b0b1 !

b0b000000100000000010100001000000110000000000100001000100011001001100000000 "
b0b000000000001000100010010000100110000000000110010000000100011001100001000 %
b0b0000000001000000000101000010000001100000000100010000010000000000100000000000000000000000000000000000000000000001000001000000000000 &
b0b00000000001000010001000110010011 '
b0b00000010000000001010000100000011 (
b0b10 )
b0b0000000000000100001000100011001001100000100100011000100000000001000000100000000000010000000000000000000000000000000100100000000000 *
b0b00000000010000000001010000100000011000000001000100000100000000001000000000000000000000000000000000000000000000010000010000000000000000000000000100001000100011001001100000100100011000100000000001000000100000000000010000000000000000000000000000000100100000000000 +
b0b000001000000000000000000 .
b0b000001000000000000000000 /
b0b000110001000000 6
b0b000010000001000000000000 ;
b0b000001 =
b0b000010 @
b0b1111111111111111111111111111111111111111111111111111111111111000 F
b0b0000000000000000000000000000000000000000000000000000000000000110 K
b0b000100000100000 W
b0b000010000001000000000000 Z
b0b0000000000010001000100100001001100000000001100100000001000110011 \
b0b00001000 ]
b0b00010000 ^

#450
b0b0 !
#500
b0b1 !

b0b000000000001000100010010000100110000000000110010000000100011001100001000 "
b0b10 $
b0b000001000100000010100000001000110000000000000000000000000000000000010000 %
b0b0000000000000010001000100100001001100001000100100000100000000001100000100000000000010000000000000000000000000000000010100000000000 &
b0b00000000001100100000001000110011 '
b0b00000000000100010001001000010011 (
b0b11 )
b0b0000000000000110010000000100011001100001100100100001000001100010000001100001000001111000000000000000000000000000000000100000000000 *
b0b00000000000000100010001001000010011000010001001000001000000000011000001000000000000100000000000000000000000000000000101000000000000000000000000110010000000100011001100001100100100001000001100010000001100001000001111000000000000000000000000000000000100000000000 +
b0b0000000000000000000000000000000000000000000000000000000000000110 ,
b0b00001000 -
b0b000011000001000000000000 .
b0b000011000001000000000000 /
b0b001000010000011 6
b0b000100000011000010000011 ;
b0b000011 =
b0b000100 @
b0b1111111111111111111111111111111111111111111111111111111111111000 D
b0b1111111111111111111111111111111111111111111111111111111111100000 F
b0b000010 I
b0b0000000000000000000000000000000000000000000000000000000000011110 K
b0b000011 M
b0b000100 R
b0b000001 U
b0b001000001000000 W
b0b000100000011000010000011 Z
b0b0000010001000000101000000010001100000000000000000000000000000000 \
b0b00010000 ]
b0b00011000 ^

#550
b0b0 !
#600
b0b1 !

