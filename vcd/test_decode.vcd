$date
  Tue Aug 23 12:05:42 2022
$end
$version
  PyMTL 3 (Mamba)
$end
$timescale
 10ps
$end

$scope module top $end
  $var reg 256 0 dual_uop $end
  $var reg 6 , stale_in(0) $end
  $var reg 6 . ready_in(0) $end
  $var reg 64 + busy_table $end
  $var reg 1 # reset $end
  $var reg 1 " clk $end
  $var reg 6 - stale_in(1) $end
  $var reg 6 / ready_in(1) $end
  $var reg 2 1 mem_q_allocate $end
  $var reg 73 2 fetch_packet $end
  $var reg 32 ) inst2 $end
  $var reg 32 $ inst1 $end
  $scope module d2 $end
    $var reg 2 * pregs_busy $end
    $var reg 8 % pc $end
    $var reg 1 ' valid $end
    $var reg 1 " clk $end
    $var reg 1 # reset $end
    $var reg 128 ! uop $end
    $var reg 24 3 pregs $end
    $var reg 32 ) inst $end
  $upscope $end
  $scope module d1 $end
    $var reg 32 $ inst $end
    $var reg 2 & pregs_busy $end
    $var reg 8 % pc $end
    $var reg 1 ' valid $end
    $var reg 1 " clk $end
    $var reg 1 # reset $end
    $var reg 128 ( uop $end
    $var reg 24 4 pregs $end
  $upscope $end
  $scope module register_rename $end
    $var reg 64 + busy_table $end
    $var reg 6 5 map_table(20) $end
    $var reg 6 6 map_table(6) $end
    $var reg 6 7 map_table(16) $end
    $var reg 6 8 map_table(27) $end
    $var reg 6 9 map_table(7) $end
    $var reg 6 : map_table(17) $end
    $var reg 6 ; map_table(28) $end
    $var reg 6 , stale_in(0) $end
    $var reg 6 < map_table(18) $end
    $var reg 64 = free_list_next $end
    $var reg 6 - stale_in(1) $end
    $var reg 6 > map_table(8) $end
    $var reg 6 ? map_table(29) $end
    $var reg 1 " clk $end
    $var reg 6 @ map_table_wr1 $end
    $var reg 6 A map_table(19) $end
    $var reg 1 # reset $end
    $var reg 6 B map_table(9) $end
    $var reg 6 C map_table(30) $end
    $var reg 6 D map_table_wr2 $end
    $var reg 6 . ready_in(0) $end
    $var reg 15 E inst1_lregs $end
    $var reg 6 F map_table(10) $end
    $var reg 6 G map_table(31) $end
    $var reg 6 / ready_in(1) $end
    $var reg 6 H map_table(21) $end
    $var reg 6 I map_table(2) $end
    $var reg 24 J inst1_pregs $end
    $var reg 6 K map_table(11) $end
    $var reg 2 & inst1_pregs_busy $end
    $var reg 6 L map_table(22) $end
    $var reg 64 M busy_table_next $end
    $var reg 6 N map_table(0) $end
    $var reg 15 O inst2_lregs $end
    $var reg 6 P pdst1 $end
    $var reg 6 Q map_table(12) $end
    $var reg 6 R map_table(23) $end
    $var reg 6 S map_table(1) $end
    $var reg 24 T inst2_pregs $end
    $var reg 6 U map_table(3) $end
    $var reg 6 V map_table(13) $end
    $var reg 6 W pdst2 $end
    $var reg 6 X map_table(24) $end
    $var reg 2 * inst2_pregs_busy $end
    $var reg 6 Y map_table(4) $end
    $var reg 6 Z map_table(14) $end
    $var reg 6 [ map_table(25) $end
    $var reg 64 \ free_list $end
    $var reg 6 ] map_table(5) $end
    $var reg 6 ^ map_table(15) $end
    $var reg 6 _ map_table(26) $end
  $upscope $end
$upscope $end
$enddefinitions $end

b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 !
b0b0 "
b0b0 #
b0b00000000000000000000000000000000 $
b0b00000000 %
b0b00 &
b0b0 '
b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (
b0b00000000000000000000000000000000 )
b0b00 *
b0b0000000000000000000000000000000000000000000000000000000000000000 +
b0b000000 ,
b0b000000 -
b0b000000 .
b0b000000 /
b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0
b0b00 1
b0b0000000000000000000000000000000000000000000000000000000000000000000000000 2
b0b000000000000000000000000 3
b0b000000000000000000000000 4
b0b000000 5
b0b000000 6
b0b000000 7
b0b000000 8
b0b000000 9
b0b000000 :
b0b000000 ;
b0b000000 <
b0b0000000000000000000000000000000000000000000000000000000000000000 =
b0b000000 >
b0b000000 ?
b0b000000 @
b0b000000 A
b0b000000 B
b0b000000 C
b0b000000 D
b0b000000000000000 E
b0b000000 F
b0b000000 G
b0b000000 H
b0b000000 I
b0b000000000000000000000000 J
b0b000000 K
b0b000000 L
b0b0000000000000000000000000000000000000000000000000000000000000000 M
b0b000000 N
b0b000000000000000 O
b0b000000 P
b0b000000 Q
b0b000000 R
b0b000000 S
b0b000000000000000000000000 T
b0b000000 U
b0b000000 V
b0b000000 W
b0b000000 X
b0b000000 Y
b0b000000 Z
b0b000000 [
b0b0000000000000000000000000000000000000000000000000000000000000000 \
b0b000000 ]
b0b000000 ^
b0b000000 _

#0
b0b1 "

b0b00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 !
b0b1 #
b0b00000000000000000000000000000000 $
b0b00000000 %
b0b00 &
b0b0 '
b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (
b0b00000000000000000000000000000000 )
b0b00 *
b0b0000000000000000000000000000000000000000000000000000000000000000 +
b0b000000 ,
b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0
b0b00 1
b0b0000000000000000000000000000000000000000000000000000000000000000000000000 2
b0b000000000000000000000000 3
b0b000000 5
b0b1111111111111111111111111111111111111111111111111111111111111110 =
b0b000000 >
b0b000000000000000 E
b0b000000 F
b0b000000000000000000000000 J
b0b000000 K
b0b0000000000000000000000000000000000000000000000000000000000000000 M
b0b000000 N
b0b000000000000000 O
b0b000000 P
b0b000000000000000000000000 T
b0b000000 U
b0b0000000000000000000000000000000000000000000000000000000000000000 \
b0b000000 ]

#50
b0b0 "
#100
b0b1 "

b0b000001 P
b0b000010 W
b0b1111111111111111111111111111111111111111111111111111111111111110 \

#150
b0b0 "
#200
b0b1 "


#250
b0b0 "
#300
b0b1 "

b0b00100000001001010010000100110110011000001001100111001010010000010000001000001000000000000000000000000000000000000000101000000000 !
b0b00001011111011101111100100110111 $
b0b1 '
b0b10100001011111011101111100100110111000000001100100000000000000001000000000000000000000010111110111011110000000000000101100100000 (
b0b00000001001010010000100110110011 )
b0b11 *
b0b1010000101111101110111110010011011100000000110010000000000000000100000000000000000000001011111011101111000000000000010110010000000100000001001010010000100110110011000001001100111001010010000010000001000001000000000000000000000000000000000000000101000000000 0
b0b0000000000001011111011101111100100110111000000010010100100001001101100111 2
b0b000010000001000001000000 3
b0b000001000000000000000000 4
b0b000001 @
b0b000010 D
b0b100100000000000 E
b0b000001000000000000000000 J
b0b100111001010010 O
b0b000010000001000001000000 T

#350
b0b0 "
#400
b0b1 "


#450
b0b0 "
#500
b0b1 "


#550
b0b0 "
#600
b0b1 "

b0b01100000101010010101010000000100011000011001000001010110100000000000000000000000000000000000000000000000000010000001010101000000 !
b0b00000010000010011010100100000011 $
b0b00001000 %
b0b01000000010000010011010100100000011000010001100101001100000000001000000000000000000000000000000000000000000001000001010001000000 (
b0b00000101010010101010000000100011 )
b0b00 *
b0b0100000001000001001101010010000001100001000110010100110000000000100000000000000000000000000000000000000000000100000101000100000001100000101010010101010000000100011000011001000001010110100000000000000000000000000000000000000000000000000010000001010101000000 0
b0b10 1
b0b0000100000000010000010011010100100000011000001010100101010100000001000111 2
b0b000000000000000000000000 3
b0b100101001100000 E
b0b000001010110100 O
b0b000000000000000000000000 T

#650
b0b0 "
#700
b0b1 "


#750
b0b0 "
#800
b0b1 "


#850
b0b0 "
#900
b0b1 "

